{% schema %}
  {
    "name": "firstproject",
    "target": "section",
    "settings": []
  }
{% endschema %}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
      .chatbox {
        position: fixed;
        display: none;
        position: absolute;
        border: #CFCACA;
        z-index: 3;
        left: 62%;
        height: 80 vm;
        width: 432px;
        border: 1px;
        transform: translate(0, -100%);
        {% comment %}
          box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);
        {% endcomment %}
      }
      .top {
        height: 133px;
        top: 75px;
        left: 817px;
        background: linear-gradient(to right,#6A11CB,#2575FC);
      }
      .topname {
        font-family: IBM Plex Sans;
        font-size: 24px;
        font-weight: 600;
        line-height: 31px;
        position: absolute;
        top: 41px;
        left: 70px;
        color: #FFFFFF
      }
      .open-chat {
        display: flex;
        align-items: center;
        justify-content: center;
        position: fixed;
        transform: translate(-5%, -120%);
        left: 100%;
        height: 65px;
        padding: 15px;
        cursor: pointer;
        box-shadow: 0 10px 10px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);
        border-radius: 50px;
        border: none;
        width: 65px;
      }
      .chatmes {
        position: relative;
        top: -10.5px;
        z-index: 1;
        height: 433px;
        font-family: Arial, sans-serif;
        font-size: 19px;
        overflow-y: auto;
        background: url({{'chatback.png' | asset_url }})no-repeat center center fixed;
        background-size: cover;
        border-radius: 15px 15px 0 0;
      }
      .day {
        position: fixed;
        left: 45%;
        z-index: 2;
        font-family: Mulish;
        font-size: 15px;
        font-weight: bold;
        line-height: 20px;
        margin-top: 10px;
        margin-bottom: 15px;
      }
      #myDiv {
        display: none;
      }
      .form1 {
        margin-top: -15px;
        height: 100px;
        background: #F2F2F2;
      }
      .inputbox {
        position: absolute;
        outline: none;
        border-bottom: none;
        border-left: none;
        border-right: none;
        border-top: none;
        background: #F2F2F2;
        color: #968B8B;
        top: 560px;
        left: 10px;
        width: 222px;
        height: 19px;
        font-family: 'Mulish';
        font-size: 15px;
        line-height: 20px;
      }
      .mike {
        text-align: center;
        position: absolute;
        width: 23.08px;
        height: 23.09px;
        top: 560px;
        left: 300px;
        padding: 5px, 10px, 5px, 10px;
        border-radius: 30px;
        gap: 10px;
        background-color: #FFFFFF;
        cursor: pointer;
      }
      .file {
        text-align: center;
        position: absolute;
        width: 23.08px;
        height: 23.09px;
        top: 560px;
        left: 333px;
        padding: 10px, 10px, 10px, 10px;
        border-radius: 30px;
        gap: 10px;
        background-color: #FFFFFF;
        cursor: pointer;
      }
      .but-ton {
        text-align: center;
        position: absolute;
        width: 23.08px;
        height: 23.09px;
        top: 560px;
        left: 366px;
        padding: 5px, 10px, 5px, 10px;
        border-radius: 30px;
        gap: 10px;
        cursor: pointer;
        background-color: #FFFFFF;
      }
      .username {
        font-family: IBM Plex Sans;
        font-size: 14px;
        font-weight: 500;
        line-height: 18px;
      }
      .botname {
        font-family: IBM Plex Sans;
        font-size: 14px;
        font-weight: 500;
        line-height: 18px;
      }
      .chatright {
        background: #05358C;
        color: white;
        border-radius: 0.4vw 0.4vw 0 0.4vw;
        padding: 4px;
        font-family: Mulish;
        font-size: 13px;
        font-weight: 500;
        line-height: 20px;
      }
      .chatleft {
        background: white;
        color: #333333;
        border: 0.02vw solid #777;
        border-radius: 0.4vw 0.4vw 0 0.4vw;
        padding: 4px;
        max-width: 50%;
        font-family: Mulish;
        font-size: 13px;
        font-weight: 500;
        line-height: 20px;
      }
      .leftalign {
        margin-top: 6%;
        margin-left: 5%;
      }
      .rightalign {
        text-align: right;
        margin-left: 50%;
        margin-right: 5%;
      }
      .button-style {
        color: gray;
        background: #E9ECEC;
        font-size: 17px;
        border-radius: 0.8vw;
        cursor: pointer;
        border: 0.12vw solid #777;
        box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.24), 0 10px 20px 0 rgba(0, 0, 0, 0.19);
        font-family: Arial, sans-serif;
        margin: 4px;
        padding: 2px;
      }
      .button-style:hover {
        background: white;
      }
      @media only screen and (max-width: 768px) {
        .chatbox {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100vh;
          z-index: 3;
        }
        .open-chat {
          position: absolute;
          left: 80%;
          height: 65px;
          padding: 15px;
        }
        .mike {
          position: absolute;
          left: 70%;
        }
        .file {
          position: absolute;
          left: 80%;
        }
        .but-ton {
          position: absolute;
          left: 90%;
        }
      }
    </style>
  </head>
  <body>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        const button = document.querySelector(".open-chat");
        const chatImage = document.getElementById("chatImage");

        function toggleImage() {
          if (chatImage.src.includes("Chatbox.png")) {
            chatImage.src = "{{ 'close.png' | asset_url }}";
            chatImage.style.width = "65px";
            openfun();
          } else {
            chatImage.src = "{{ 'Chatbox.png' | asset_url }}";
            closefun();
          }
        }
        button.addEventListener("click", toggleImage);
      });
      function openfun() {
        const myDiv = document.getElementById("myDiv");
        setTimeout(() => {
          myDiv.style.display = "block";
        }, 1500);
        document.getElementById('chatbox').style.display = 'block';
      }
      function closefun() {
        document.getElementById('chatbox').style.display = 'none';
      }
    </script>

    <button class="open-chat" onclick="toggleImage()">
      <img
        src="{{ 'Chatbox.png' | asset_url }}"
        id="chatImage"
        style="width: 65px;" />
    </button>

    <div class="chatbox" id="chatbox">
      <div>
        <div class="top">
          <img src="{{'man.jpg' | asset_url }}" style="position:absolute; width: 35px; top:45px;left:30px;" />
          <span class="topname">Chatbox</span>
        </div>
        <div class="chatmes">
          <div class="day">Today</div>
          <div id="myDiv">
            <div class="leftalign">
              <img src="{{'bot.jpg'|asset_url}}" style="width: 17.54px;" />
              <span class="botname">James Smith</span>
            </div>
            <div
              class="chatleft"
              id="left"
              style="margin-left:5%;">Hi,May I have your name..?</div>
          </div>
          <div id="show"></div>
          <div id="chat"></div>
          <div id="button-container"></div>
        </div>
        <div class="form1">
          <input
            id="user-input"
            type="text"
            placeholder="Type a message and hit enter"
            class="inputbox"
            value="{{user-input}}" />
          <span class="mike">
            <img src="{{'mike.png'|asset_url}}" style="width: 14px; height: 16px;"></span>
          <span class="file">
            <img src="{{'file.png'|asset_url}}" style="width: 14px; height: 15px;"></span>
          <nav class="but-ton"><img
              src="{{'send.png'|asset_url}}"
              style="width: 15px; height: 15px;"
              onclick="sendMessage()">
          </nav>
        </div>
      </div>

      <script>
document.addEventListener("DOMContentLoaded", function() {
    const displayedMessages = new Set();
    function updateChat(message) {
        const chatMessages = document.getElementById("chat");

        message.forEach(msg=>{
          if(!displayedMessages.has(msg.id)){
        chatMessages.innerHTML += `<div class="leftalign">
            <div>
                <img src="{{'bot.jpg'|asset_url}}" style="width: 17.54px; background:white;">
                <span class="botname">James Smith</span>
            </div>
            <div class="chatleft">${msg.text}</div>
        </div>`;
        displayedMessages.add(msg.id);
          }
        });
        }
    
    function pollForUpdates() {
        fetch('http://localhost:3001/api/admin')
            .then(response => response.json())
            .then(data => {
              if(Array.isArray(data)){
              const newMessages = data.filter(message => !displayedMessages.has(message.id));
                if (newMessages.length > 0) {
                    console.log(newMessages);
                    updateChat(newMessages); 
                }
              }else{
                console.log("not an array");
              }
            })
            .catch(error => {
                console.error('Error fetching updates:', error);
            })
            .finally(() => {
                setTimeout(pollForUpdates, 1000);
            });
    }
    pollForUpdates();
});
</script>

      </script>
      <script>
        let count = 0;
        const liquidData = {
          buttons: [
            {
              label: "Product",
              value: "You can buy your own products"
            }, {
              label: "Billing",
              value: "Contact the store owner"
            }, {
              label: "Shipping",
              value: "Have you Received your Product?"
            }
          ]
        };

        function renderButtons(data) {
          const buttonContainer = document.getElementById('button-container');
          data.buttons.forEach(button => {
            const buttonElement = document.createElement('button');
            buttonElement.textContent = button.label;
            buttonElement.value = button.value;
            buttonElement.classList.add('button-style');
            buttonElement.addEventListener('click', () => handleButtonClick(button.label, button.value));
            buttonContainer.appendChild(buttonElement);
          });
        }

        function handleButtonClick(label, value) {
          displayMessageright(label);
          simulateBotResponse(value);
        }

        function simulateBotResponse(value) {
          setTimeout(() => {
            displayMessageleft(value);
          }, 1000);
        }

        function displayMessageleft(message) {
          const chatMessages = document.getElementById("chat");
          chatMessages.innerHTML += `<div class="leftalign">
            <div >
            <img src="{{'bot.jpg'|asset_url}}" style="width: 17.54px; background:white;">
            <span class="botname">James Smith</span>
            </div>
            <div class="chatleft">${message}</div>
            </div>`;
        }

        function displayMessageright(message) {
          const chatMessages = document.getElementById("chat");
          chatMessages.innerHTML += `<div class="rightalign">
            <div>
            <img src="{{'user.jpg'|asset_url}}" style="width:17.54px;">
            <sapn class="username">Ramesh</span>
            </div>
            <div class="chatright">${message}</div>
            </div>`;
        }


        function simulateButtonResponse() {
          setTimeout(() => {
            showButtons();
          }, 1000);
        }
        function showButtons() {
          const userMessage = document.getElementById("user-input").value.toLowerCase();
          if (true) {
            renderButtons(liquidData);
          } else {
            const buttonContainer = document.getElementById('button-container');
            buttonContainer.innerHTML = "";
          }
        }

        function sendMessage() {
          const userInput = document.getElementById("user-input").value;
          const msginput = {
            userMessage: document.getElementById("user-input").value
          };

          console.log(msginput);
          fetch('http://localhost:3001/api/user', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(msginput)
          }).then(response => response.json()).then(data => {
            console.log('Data submitted successfully:', data);
          }).catch(error => {
            console.error('Error submitting data:', error);
          });
          displayMessageright(userInput);
          if (count == 0) {
            simulateNameResponse(userInput);
            simulateButtonResponse();
            count++;
          } else {
            simulateBotResponse(getBotResponse(userInput));
          }
          document.getElementById("user-input").value = "";
        }
        function simulateNameResponse(value) {
          setTimeout(() => {
            displayname(value);
          }, 1000);
        }
        function displayname(message) {
          const chatMessages = document.getElementById("chat");
          chatMessages.innerHTML += `<div class="leftalign">
            <div >
            <img src="{{'bot.jpg'|asset_url}}" style="width: 17.54px; background:white;">
            <span class="botname">James Smith</span>
            </div>
              <div class="chatleft">${
            'Welcome , ' + message + ' How can I help You'
          }</div>
          </div>`;
        }
        function getBotResponse(userInput) {
          const lowerCaseInput = userInput.toLowerCase();
          const responses = {
            "hi": "Hello, how can I help you!",
            "how are you": "I'm doing well, thank you!",
            "bye": "Goodbye!",
            "default": "I didn't understand that. Can you please rephrase?"
          };
          return responses[lowerCaseInput] || responses["default"];
        }
      </script>
    </body>
  </body>
</html>